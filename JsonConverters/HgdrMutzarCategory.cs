using IHubWebApplication.Model;
using Microsoft.Extensions.Options;
using System.Numerics;
using System.Text.Json;
using System;
using System.Text.Json.Serialization;

namespace IHubWebApplication.JsonConverters
{

    //this serializer is need cos otherwise i got a circer relation ship and sending data from client to server and vsrvr fails.
    //since i cant manapulate the objects there and put there [jsonignor] attribute because the objects are autogenerated
    public class HgdrMutzarCategoryConverter : JsonConverter<HgdrMutzarCategory>
    {
        public override HgdrMutzarCategory? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            throw new NotImplementedException();
        }

        //when objects sent from client to server
        //public override HgdrMutzarCategory Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        //{
        //    if (reader.TokenType != JsonTokenType.StartObject)
        //    {
        //        throw new JsonException();
        //    }

        //    HgdrMutzarCategory mutzar = new HgdrMutzarCategory();

        //    while (reader.Read())
        //    {
        //        if (reader.TokenType == JsonTokenType.EndObject)
        //        {
        //            return mutzar;
        //        }

        //        if (reader.TokenType == JsonTokenType.PropertyName)
        //        {
        //            string propertyName = reader.GetString();
        //            reader.Read();

        //            switch (propertyName)
        //            {
        //                case "id":
        //                    mutzar.KodMutzar = reader.GetInt32();
        //                    break;
        //                case "kodSugMutzarNavigation":
        //                    if (reader.TokenType != JsonTokenType.StartObject)
        //                    {
        //                        break;
        //                        //throw new JsonException("Invalid JSON for KodSugMutzarNavigation.");
        //                    }

        //                    mutzar.KodSugMutzarNavigation = new HgdrSugMutzar();

        //                    while (reader.Read())
        //                    {
        //                        if (reader.TokenType == JsonTokenType.EndObject)
        //                        {
        //                            break;
        //                        }

        //                        if (reader.TokenType == JsonTokenType.PropertyName)
        //                        {
        //                            string subPropertyName = reader.GetString();
        //                            reader.Read();

        //                            switch (subPropertyName)
        //                            {
        //                                case "Id":
        //                                    mutzar.KodSugMutzarNavigation.Id = reader.GetInt32();
        //                                    break;
        //                                case "sugMutzar":
        //                                    mutzar.KodSugMutzarNavigation.SugMutzar = reader.GetString();
        //                                    break;
        //                                    // Handle other properties of KodSugMutzarNavigation if needed
        //                            }
        //                        }
        //                    }
        //                    break;
        //                case "kodSugMutzar":
        //                    {
        //                        mutzar.KodSugMutzar = reader.GetInt32();
        //                        break;

        //                    }
        //                case "mutzar":
        //                    mutzar.Mutzar = reader.GetString();
        //                    break;
        //                    // Handle other properties here
        //            }
        //        }
        //    }
        //    return mutzar;
        //    // throw new JsonException("Incomplete JSON data for HgdrMutzar.");
        //}


        //when objects sent from server to client
        public override void Write(Utf8JsonWriter writer, HgdrMutzarCategory value, JsonSerializerOptions options)
        {
            writer.WriteStartObject();
            if(value.KodSugMutzar.HasValue)
            writer.WriteNumber("kodSugMutzar", value.KodSugMutzar.Value);
            if (value.RafTsuaYomit.HasValue)
                writer.WriteNumber("rafTsuaYomit", value.RafTsuaYomit.Value);
            writer.WriteString("teurCategory", value.TeurCategory);

            writer.WriteEndObject();
        }
    }






}
